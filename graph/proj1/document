1. How many times did you run your simulation to generate the probabilities?

A. I tried 100,000,000 games.

2. What is the fewest turns for a player to win?

A. A player can win at 2 turns.

3.What is the probability that a player has won on turns 2,4,8,16,32,64, and 128?

A.
  2:
  4:
  8:
  16:
  32:
  64:
  128:

4. Is it ever more probably that a player has won than hasn't? If so, on what turn? If not, why not?

A. I tyied to get winning probabilities on n turns 2<=n<=10000 by simulating 10,000 games for each n.
If there is a specific turn that a player has won than hasn't, then there are some turns that have over 50% winning probability.
The result is that the probabilities are nearly 4%, which is absolutely lower than 50%.
So I think, there is no specific turn that a player has won than hasn't.



Analysis
1. What is the shortest path for a player to win? What algorithm did you use?
A. I try exhaustic search. Simulate 100,000,000 times and get the shortest path.
It is 53 > 63.

2. What is the lease ptobable path for a wining player? what algorithm did you use?

A.

3. What is the most probable path for a player to win? What algorithm did you use?

A. I think it depends on the turns.
So I set the maximum turn. And keep tracking the path.
If this current path is new one, then add to the total_path.
If not, add 1 to that path_num.
After all the simulation, find the maximum value of path_num.
And then print that path.

4.What is the longest path for a player to win? What algorithm did you use?

A. start-> 3 > 5> 7> 9 > 11 > 13 >15 >17 >19 >21 >23 >25 >27 >29 >31 > 33 >35 >37 > 40 > 42 > 39 > 41 > 43 > 45 > 47 > 49 > 51 > 53 > 55> 58 > 1 > 4 > 8 > 10 > 12 > 14 > 16 > 18 > 20 > 22 > 24 > 26 > 28 > 30 > 32 > 34 > 36 > 38 > 44 > 46 > 48 > 50 > 52 > 54 > 56 > 59 > 61 > 57 > 62 > 60> end
without 2,6 we visit every vertex from 1~63.
Actually we try to make DFS. But we got this longest path from greedy algorithm.
For greedy algorithm, we try to visit variety vertex.
So we take step as small as possible.
Since no path from 62 to 63, we try 61 > 57 > 62 > 60

